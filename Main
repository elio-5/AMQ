import pygame as pg
from settings import *
vec = pg.math.Vector2
from tilemap import collide_hit_rect
import random


def is_within_range( x, y, target_x, target_y, range_limit=5):
    return abs(x - target_x) <= range_limit and abs(y - target_y) <= range_limit
class Player(pg.sprite.Sprite):
    def __init__(self, game, x, y):
        self.groups = game.all_sprites
        pg.sprite.Sprite.__init__(self, self.groups)
        self.game = game
        self.image = game.player_img
        self.rect = self.image.get_rect()
        self.hit_rect = PLAYER_HIT_RECT
        self.hit_rect.center = self.rect.center
        self.vel = vec(0,0)
        self.acc = vec(0,0)
        self.pos = vec(x,y) * TILESIZE
        self.rect.center = self.pos
        self.rot = 0

        self.coins = PLAYER_COINS
        self.coin = COIN
        self.coin1 = COIN
        self.coin2 = COIN
        self.coin3 = COIN
        self.is_rolling = False
        self.rolling_images_counter = 0
        self.rand_num = -1
        self.second = True
        self.co = (0,0)
        self.move = True
        self.dice = True
        self.arrowright = False
        self.arrowleft = False
        self.next = False
        self.rollcount = 0
        self.sqone = False
        self.sq2 = False
        self.sq3 = False
        self.sq4 = False
        self.sq5 = False
        self.sq6 = False
        self.sq7 = False

    def dice_roll(self):
        if pg.key.get_pressed()[pg.K_SPACE] and self.is_rolling is False and self.dice:
            self.is_rolling = True
            self.rand_num = random.randint(0,5)
            self.dice = False
            self.next = True
            self.arrowright, self.arrowleft = False, False

        else:
            if self.is_rolling:
                self.rolling_images_counter += 1
                if self.rolling_images_counter >= 8:
                    self.is_rolling = False
                    self.rolling_images_counter = 0
                    self.rand_num = -1
                    self.next = False


    def get_keys(self):
        keys = pg.key.get_pressed()
        #if keys[pg.K_LEFT] or keys[pg.K_a]:
            #self.vel.x = -PLAYER_SPEED
        #if keys[pg.K_RIGHT] or keys[pg.K_d]:
            #self.RIGHT_KEY = True
        #if keys[pg.K_UP] or keys[pg.K_w]:
            #self.vel.y = -PLAYER_SPEED
        #if keys[pg.K_DOWN] or keys[pg.K_s]:
            #self.vel.y = PLAYER_SPEED
        #if self.vel.x != 0 and self.vel.y != 0:
            #self.vel *= 0.7071
        if keys[pg.K_SPACE] and self.is_rolling is False:
            self.dice_roll()

    def player_movement(self):


        if self.second and self.rand_num != -1:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True

            if self.rand_num == 0:
                self.co = vec(37, 31) * TILESIZE
                #self.move = True
                if is_within_range(self.pos.x, self.pos.y,37*TILESIZE,31*TILESIZE):
                    self.dice = True
                    self.next = False
                    self.second = False

            elif self.rand_num == 1:
                self.co = vec(33,32) * TILESIZE
                self.move = True
                if is_within_range(self.pos.x, self.pos.y,33*TILESIZE,32*TILESIZE):
                    self.dice = True
                    self.next = False
                    self.second = False
            elif self.rand_num == 2 and self.arrowright:
                self.co = vec(29,30) * TILESIZE
                self.move = True
                self.arrowleft = False
                if is_within_range(self.pos.x, self.pos.y,29*TILESIZE,30*TILESIZE):
                    self.dice = True
                    self.next = False
                    self.second = False

            elif self.rand_num == 2 and self.arrowleft:
                self.co = vec(28,33) * TILESIZE
                self.move = True
                self.arrowright = False
                if is_within_range(self.pos.x, self.pos.y,28*TILESIZE,33*TILESIZE):
                    self.dice = True
                    self.next = False
                    self.second = False
            elif self.rand_num == 3 and self.arrowright:
                self.co = vec(26,28) * TILESIZE
                self.move = True
                if is_within_range(self.pos.x, self.pos.y,26*TILESIZE,28*TILESIZE):
                    self.dice = True
                    self.next = False
                    self.second = False
            elif self.rand_num == 3 and self.arrowleft:
                self.co = vec(25,35) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,25*TILESIZE,35*TILESIZE):
                    self.dice = True
                    self.next = False
                    self.second = False
            elif self.rand_num == 4 and self.arrowright:
                self.co = vec(23, 27) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,23*TILESIZE,27*TILESIZE):
                    self.dice = True
                    self.next = False
                    self.second = False
            elif self.rand_num == 4 and self.arrowleft:
                self.co = vec(21, 36) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,21*TILESIZE,36*TILESIZE):
                    self.dice = True
                    self.next = False
                    self.second = False
            elif self.rand_num == 5 and self.arrowright:
                self.co = vec(22, 23) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,22*TILESIZE,23*TILESIZE):
                    self.dice = True
                    self.next = False
                    self.second = False
            elif self.rand_num == 5 and self.arrowleft:
                self.co = vec(18, 38) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,18*TILESIZE,38*TILESIZE):
                    self.dice = True
                    self.next = False
                    self.second = False

        if is_within_range(self.pos.x, self.pos.y,37 * TILESIZE, 31 * TILESIZE, 2 )  and (self.next or self.sqone):
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True

            if self.rand_num == 0:
                self.co = vec(33, 32) * TILESIZE
                self.move = True
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,37*TILESIZE,31*TILESIZE):
                    self.dice = True
                    self.sqone = False
            elif self.rand_num == 1 and self.arrowright:
                self.co = vec(29,30) * TILESIZE
                self.move = False
                self.arrowleft = False
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,29*TILESIZE,30*TILESIZE):
                    self.dice = True
                    self.sqone = False

            elif self.rand_num == 1 and self.arrowleft:
                self.co = vec(28,33) * TILESIZE
                self.move = False
                self.arrowright = False
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,28*TILESIZE,33*TILESIZE):
                    self.dice = True
                    self.sqone = False
            elif self.rand_num == 2 and self.arrowright:
                self.co = vec(26,28) * TILESIZE
                self.move = False
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,26*TILESIZE,28*TILESIZE):
                    self.dice = True
                    self.sqone = False
            elif self.rand_num == 2 and self.arrowleft:
                self.co = vec(25,35) * TILESIZE
                self.move = False
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,25*TILESIZE,35*TILESIZE):
                    self.dice = True
                    self.sqone = False
            elif self.rand_num == 3 and self.arrowright:
                self.co = vec(23, 27) * TILESIZE
                self.move = False
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,23*TILESIZE,27*TILESIZE):
                    self.dice = True
                    self.sqone = False
            elif self.rand_num == 3 and self.arrowleft:
                self.co = vec(21, 36) * TILESIZE
                self.move = False
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,21*TILESIZE,36*TILESIZE):
                    self.dice = True
                    self.sqone = False
            elif self.rand_num == 4 and self.arrowright:
                self.co = vec(22, 23) * TILESIZE
                self.move = False
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,22*TILESIZE,23*TILESIZE):
                    self.dice = True
                    self.sqone = False
            elif self.rand_num == 4 and self.arrowleft:
                self.co = vec(18, 38) * TILESIZE
                self.move = False
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,18*TILESIZE,38*TILESIZE):
                    self.dice = True
                    self.sqone = False
            elif self.rand_num == 5 and self.arrowright:
                self.co = vec(23, 20) * TILESIZE
                self.move = False
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,22*TILESIZE,23*TILESIZE):
                    self.dice = True
                    self.sqone = False
            elif self.rand_num == 5 and self.arrowleft:
                self.co = vec(14, 39) * TILESIZE
                self.move = False
                self.next = False
                self.sqone = True
                if is_within_range(self.pos.x, self.pos.y,18*TILESIZE,38*TILESIZE):
                    self.dice = True
                    self.sqone = False

        if is_within_range(self.pos.x, self.pos.y,33 * TILESIZE, 32 * TILESIZE, 2 )  and (self.next or self.sq2):
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True


            elif self.rand_num == 0 and self.arrowright:
                self.co = vec(29,30) * TILESIZE
                self.move = False
                self.arrowleft = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,29*TILESIZE,30*TILESIZE):
                    self.dice = True
                    self.sq2 = False

            elif self.rand_num == 0 and self.arrowleft:
                self.co = vec(28,33) * TILESIZE
                self.move = False
                self.arrowright = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,28*TILESIZE,33*TILESIZE):
                    self.dice = True
                    self.sq2 = False
            elif self.rand_num == 1 and self.arrowright:
                self.co = vec(26,28) * TILESIZE
                self.move = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,26*TILESIZE,28*TILESIZE):
                    self.dice = True
                    self.sq2 = False
            elif self.rand_num == 1 and self.arrowleft:
                self.co = vec(25,35) * TILESIZE
                self.move = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,25*TILESIZE,35*TILESIZE):
                    self.dice = True
                    self.sq2 = False
            elif self.rand_num == 2 and self.arrowright:
                self.co = vec(23, 27) * TILESIZE
                self.move = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,23*TILESIZE,27*TILESIZE):
                    self.dice = True
                    self.sq2 = False
            elif self.rand_num == 2 and self.arrowleft:
                self.co = vec(21, 36) * TILESIZE
                self.move = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,21*TILESIZE,36*TILESIZE):
                    self.dice = True
                    self.sq2 = False
            elif self.rand_num == 3 and self.arrowright:
                self.co = vec(22, 23) * TILESIZE
                self.move = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,22*TILESIZE,23*TILESIZE):
                    self.dice = True
                    self.sq2 = False
            elif self.rand_num == 3 and self.arrowleft:
                self.co = vec(18, 38) * TILESIZE
                self.move = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,18*TILESIZE,38*TILESIZE):
                    self.dice = True
                    self.sq2 = False
            elif self.rand_num == 4 and self.arrowright:
                self.co = vec(23, 20) * TILESIZE
                self.move = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,23*TILESIZE,20*TILESIZE):
                    self.dice = True
                    self.sq2 = False
            elif self.rand_num == 4 and self.arrowleft:
                self.co = vec(14, 39) * TILESIZE
                self.move = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,14*TILESIZE,39*TILESIZE):
                    self.dice = True
                    self.sq2 = False
            elif self.rand_num == 5 and self.arrowright:
                self.co = vec(27, 20) * TILESIZE
                self.move = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,27*TILESIZE,20*TILESIZE):
                    self.dice = True
                    self.sq2 = False
            elif self.rand_num == 5 and self.arrowleft:
                self.co = vec(11, 38) * TILESIZE
                self.move = False
                self.next = False
                self.sq2 = True
                if is_within_range(self.pos.x, self.pos.y,11*TILESIZE,38*TILESIZE):
                    self.dice = True
                    self.sq2 = False

        if is_within_range(self.pos.x, self.pos.y,29 * TILESIZE, 30 * TILESIZE, 2 )  and (self.next or self.sq3):
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True


            elif self.rand_num == 0:
                self.co = vec(26,28) * TILESIZE
                self.move = False
                self.next = False
                self.sq3 = True
                if is_within_range(self.pos.x, self.pos.y,26*TILESIZE,28*TILESIZE):
                    self.dice = True
                    self.sq3 = False

            elif self.rand_num == 1:
                self.co = vec(23,27) * TILESIZE
                self.move = False
                self.next = False
                self.sq3 = True
                if is_within_range(self.pos.x, self.pos.y,23*TILESIZE,27*TILESIZE):
                    self.dice = True
                    self.sq3 = False

            elif self.rand_num == 2:
                self.co = vec(22, 23) * TILESIZE
                self.move = False
                self.next = False
                self.sq3 = True
                if is_within_range(self.pos.x, self.pos.y,22*TILESIZE,23*TILESIZE):
                    self.dice = True
                    self.sq3 = False
            elif self.rand_num == 3:
                self.co = vec(23, 20) * TILESIZE
                self.move = False
                self.next = False
                self.sq3 = True
                if is_within_range(self.pos.x, self.pos.y,23*TILESIZE,20*TILESIZE):
                    self.dice = True
                    self.sq3 = False
            elif self.rand_num == 4:
                self.co = vec(27, 20) * TILESIZE
                self.move = False
                self.next = False
                self.sq3 = True
                if is_within_range(self.pos.x, self.pos.y,27*TILESIZE,20*TILESIZE):
                    self.dice = True
                    self.sq3 = False
            elif self.rand_num == 5:
                self.co = vec(31, 19) * TILESIZE
                self.move = False
                self.next = False
                self.sq3 = True
                if is_within_range(self.pos.x, self.pos.y,31*TILESIZE,19*TILESIZE):
                    self.dice = True
                    self.sq3 = False

        if is_within_range(self.pos.x, self.pos.y, 26 * TILESIZE, 28 * TILESIZE, 2) and (self.next or self.sq4):
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True


            elif self.rand_num == 0:
                self.co = vec(23, 27) * TILESIZE
                self.move = False
                self.arrowleft = False
                self.next = False
                self.sq4 = True
                if is_within_range(self.pos.x, self.pos.y, 23 * TILESIZE, 27 * TILESIZE):
                    self.dice = True
                    self.sq4 = False

            elif self.rand_num == 1:
                self.co = vec(22, 23) * TILESIZE
                self.move = False
                self.next = False
                self.sq4 = True
                if is_within_range(self.pos.x, self.pos.y, 22 * TILESIZE, 23 * TILESIZE):
                    self.dice = True
                    self.sq4 = False

            elif self.rand_num == 2:
                self.co = vec(23, 20) * TILESIZE
                self.move = False
                self.next = False
                self.sq4 = True
                if is_within_range(self.pos.x, self.pos.y, 23 * TILESIZE, 20 * TILESIZE):
                    self.dice = True
                    self.sq4 = False
            elif self.rand_num == 3:
                self.co = vec(27, 20) * TILESIZE
                self.move = False
                self.next = False
                self.sq4 = True
                if is_within_range(self.pos.x, self.pos.y, 27 * TILESIZE, 20 * TILESIZE):
                    self.dice = True
                    self.sq4 = False
            elif self.rand_num == 4:
                self.co = vec(31, 19) * TILESIZE
                self.move = False
                self.next = False
                self.sq4 = True
                if is_within_range(self.pos.x, self.pos.y, 31 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.sq4 = False
            elif self.rand_num == 5:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                self.next = False
                self.sq4 = True
                if is_within_range(self.pos.x, self.pos.y,40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.sq4 = False

        if is_within_range(self.pos.x, self.pos.y, 23 * TILESIZE, 27 * TILESIZE, 2) and (self.next or self.sq5):
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True


            elif self.rand_num == 0:
                self.co = vec(22, 23) * TILESIZE
                self.move = False
                self.arrowleft = False
                self.next = False
                self.sq5 = True
                if is_within_range(self.pos.x, self.pos.y, 22 * TILESIZE, 23 * TILESIZE):
                    self.dice = True
                    self.sq5 = False

            elif self.rand_num == 1:
                self.co = vec(23, 20) * TILESIZE
                self.move = False
                self.next = False
                self.sq5 = True
                if is_within_range(self.pos.x, self.pos.y, 23 * TILESIZE, 20 * TILESIZE):
                    self.dice = True
                    self.sq5 = False

            elif self.rand_num == 2:
                self.co = vec(27, 20) * TILESIZE
                self.move = False
                self.next = False
                self.sq5 = True
                if is_within_range(self.pos.x, self.pos.y, 27 * TILESIZE, 20 * TILESIZE):
                    self.dice = True
                    self.sq5 = False
            elif self.rand_num == 3:
                self.co = vec(31, 19) * TILESIZE
                self.move = False
                self.next = False
                self.sq5 = True
                if is_within_range(self.pos.x, self.pos.y, 31 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.sq5 = False
            elif self.rand_num == 4:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                self.next = False
                self.sq5 = True
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.sq5 = False
            elif self.rand_num == 5:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                self.next = False
                self.sq5 = True
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.sq5 = False

        if is_within_range(self.pos.x, self.pos.y, 22 * TILESIZE, 23 * TILESIZE, 2) and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True


            elif self.rand_num == 0:
                self.co = vec(23, 20) * TILESIZE
                self.move = False
                self.arrowleft = False
                if is_within_range(self.pos.x, self.pos.y, 23 * TILESIZE, 20 * TILESIZE):
                    self.dice = True
                    self.next = False

            elif self.rand_num == 1:
                self.co = vec(27, 20) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 27 * TILESIZE, 20 * TILESIZE):
                    self.dice = True
                    self.next = False

            elif self.rand_num == 2:
                self.co = vec(31, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 31 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y, 23 * TILESIZE, 20 * TILESIZE, 2) and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True


            elif self.rand_num == 0:
                self.co = vec(27, 20) * TILESIZE
                self.move = False
                self.arrowleft = False
                if is_within_range(self.pos.x, self.pos.y, 27 * TILESIZE, 20 * TILESIZE):
                    self.dice = True
                    self.next = False

            elif self.rand_num == 1:
                self.co = vec(31, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 31 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False

            elif self.rand_num == 2:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y, 27 * TILESIZE, 20 * TILESIZE, 2) and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True


            elif self.rand_num == 0:
                self.co = vec(31, 19) * TILESIZE
                self.move = False
                self.arrowleft = False
                if is_within_range(self.pos.x, self.pos.y, 31 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False

            elif self.rand_num == 1:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False

            elif self.rand_num == 2:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y, 31 * TILESIZE, 19 * TILESIZE, 2) and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True


            elif self.rand_num == 0:
                self.co = vec(40, 19) * TILESIZE
                x,y = self.co
                self.move = False
                self.arrowleft = False
                if is_within_range(self.pos.x, self.pos.y, x * TILESIZE, y * TILESIZE):
                    self.dice = True
                    self.next = False

            elif self.rand_num == 1:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False

            elif self.rand_num == 2:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(40, 19) * TILESIZE
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, 40 * TILESIZE, 19 * TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y,28 * TILESIZE, 33 * TILESIZE, 2 )  and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True

            elif self.rand_num == 0:
                self.co = vec(25,35) * TILESIZE
                x,y = self.co
                self.move = False
                self.arrowright = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 1:
                self.co = vec(21,36) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 2:
                self.co = vec(18, 38) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(14, 39) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(11, 38) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(8, 37) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y,25 * TILESIZE, 35 * TILESIZE, 2 )  and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True

            elif self.rand_num == 0:
                self.co = vec(21,36) * TILESIZE
                x,y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 1:
                self.co = vec(18,38) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 2:
                self.co = vec(14, 39) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(11, 38) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(8, 37) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(5, 36) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y,21 * TILESIZE, 36 * TILESIZE, 2 )  and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True

            elif self.rand_num == 0:
                self.co = vec(18,38) * TILESIZE
                x,y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 1:
                self.co = vec(14,39) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 2:
                self.co = vec(11, 38) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(8, 37) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(5, 36) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(4, 33) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y,18 * TILESIZE, 38 * TILESIZE, 2 )  and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True

            elif self.rand_num == 0:
                self.co = vec(14,39) * TILESIZE
                x,y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 1:
                self.co = vec(11,38) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 2:
                self.co = vec(8, 37) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(5, 36) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(4, 33) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(5, 30) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y,14 * TILESIZE, 39 * TILESIZE, 2 )  and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True

            elif self.rand_num == 0:
                self.co = vec(11,38) * TILESIZE
                x,y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 1:
                self.co = vec(8,37) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 2:
                self.co = vec(5, 36) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(4, 33) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(5, 30) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(7, 27) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y,11 * TILESIZE, 38 * TILESIZE, 2 )  and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True

            elif self.rand_num == 0:
                self.co = vec(8,37) * TILESIZE
                x,y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 1:
                self.co = vec(5,36) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 2:
                self.co = vec(4, 33) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(5, 30) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(7, 27) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(10, 24) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y,8 * TILESIZE, 37 * TILESIZE, 2 )  and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True

            elif self.rand_num == 0:
                self.co = vec(5,36) * TILESIZE
                x,y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 1:
                self.co = vec(4,33) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 2:
                self.co = vec(5, 30) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(7, 27) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(10, 24) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5:
                self.co = vec(13, 22) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False

        if is_within_range(self.pos.x, self.pos.y,5 * TILESIZE, 36 * TILESIZE, 2 )  and self.next:
            if pg.key.get_pressed()[pg.K_RIGHT]:
                self.arrowright = True
            if pg.key.get_pressed()[pg.K_LEFT]:
                self.arrowleft = True

            elif self.rand_num == 0:
                self.co = vec(4,33) * TILESIZE
                x,y = self.co
                self.move = False
                self.arrowright = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 1:
                self.co = vec(5,30) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 2:
                self.co = vec(7, 27) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 3:
                self.co = vec(10, 24) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 4:
                self.co = vec(13, 22) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5 and self.arrowright:
                self.co = vec(19, 22) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y,x*TILESIZE,y*TILESIZE):
                    self.dice = True
                    self.next = False
            elif self.rand_num == 5 and self.arrowleft:
                self.co = vec(16, 18) * TILESIZE
                x, y = self.co
                self.move = False
                if is_within_range(self.pos.x, self.pos.y, x * TILESIZE, y * TILESIZE):
                    self.dice = True
                    self.next = False













    def collide_with_bluespaces(self, dir):
        if dir == 'x' or dir == 'y':
            hits = pg.sprite.spritecollide(self, self.game.bluespaces, False, collide_hit_rect)
            if hits and self.coin == 1:
                self.coins += 3
                self.coin += 2
            elif not hits:
                self.coin = 1


    def collide_with_yellowspaces(self, dir):
        if dir == 'x' or dir == 'y':
            hits = pg.sprite.spritecollide(self, self.game.yellowspaces, False,collide_hit_rect)




    def collide_with_redspaces(self, dir):
        if dir == 'x' or dir == 'y':
            hits = pg.sprite.spritecollide(self, self.game.redspaces, False,collide_hit_rect)
            if hits and self.coin1 == 1:
                self.coins -= 3
                self.coin1 += 2
            elif not hits:
                self.coin1 = 1
    def collide_with_bossspaces(self, dir):
        if dir == 'x' or dir == 'y':
            hits = pg.sprite.spritecollide(self, self.game.bossspaces, False,collide_hit_rect)
            if hits and self.coin2 == 1:
                self.coins -= 5
                self.coin2 += 2
            elif not hits:
                self.coin2 = 1

    def collide_with_luckyspaces(self, dir):
        if dir == 'x' or dir == 'y':
            hits = pg.sprite.spritecollide(self, self.game.luckyspaces, False,collide_hit_rect)
            if hits and self.coin3 == 1:
                self.coins += 5
                self.coin3 += 2
            elif not hits:
                self.coin3 = 1



    def update(self):
        self.get_keys()
        self.rect = self.image.get_rect()
        self.player_movement()
        if self.rand_num != -1 and self.co != (0,0):
            self.rot = (self.co - self.pos).angle_to(vec(1,0))
            self.acc = vec(PLAYER_SPEED,0).rotate(- self.rot)
            self.acc += self.vel * -5
        #elif self.rand_num  != -1 and self.co != (0,0):
            #self.rot = (self.co - self.pos).angle_to(vec(1, 0))
            #self.acc = vec(PLAYER_SPEED, 0).rotate(- self.rot)
            #self.acc += self.vel * -5
        else:
            self.rot = 0
            self.acc = vec(0,0)
            self.vel = vec(0,0)
        self.vel += self.acc * self.game.dt
        self.pos += self.vel * self.game.dt + 0.5 * self.acc * self.game.dt ** 2
        #if is_within_range(self.pos.x,self.pos.y):
            #self.dice = True
        self.hit_rect.centerx = self.pos.x
        self.hit_rect.centery = self.pos.y
        self.rect.center = self.hit_rect.center
        self.rect.center = self.pos
        self.collide_with_bluespaces('x' or 'y')
        self.collide_with_redspaces('x' or 'y')
        self.collide_with_luckyspaces('x' or 'y')
        self.collide_with_yellowspaces('x' or 'y')
        self.collide_with_bossspaces('x' or 'y')

class bluespace(pg.sprite.Sprite):
    def __init__(self, game, x, y):
        self.groups = game.all_sprites, game.bluespaces
        pg.sprite.Sprite.__init__(self, self.groups)
        self.game = game
        self.image = pg.Surface((TILESIZE, TILESIZE))
        self.image.set_colorkey(BLUE )
        self.image.fill(BLUE)
        self.rect = self.image.get_rect()
        self.x = x
        self.y = y
        self.rect.x = x * TILESIZE
        self.rect.y = y * TILESIZE
class yellowspace(pg.sprite.Sprite):
    def __init__(self, game, x, y):
        self.groups = game.all_sprites, game.yellowspaces
        pg.sprite.Sprite.__init__(self, self.groups)
        self.game = game
        self.image = pg.Surface((TILESIZE, TILESIZE))
        self.image.set_colorkey(YELLOW)
        self.image.fill(YELLOW)
        self.rect = self.image.get_rect()
        self.x = x
        self.y = y
        self.rect.x = x * TILESIZE
        self.rect.y = y * TILESIZE
class redspace(pg.sprite.Sprite):
    def __init__(self, game, x, y):
        self.groups = game.all_sprites, game.redspaces
        pg.sprite.Sprite.__init__(self, self.groups)
        self.game = game
        self.image = pg.Surface((TILESIZE, TILESIZE))
        self.image.set_colorkey(RED)
        self.image.fill(RED)
        self.rect = self.image.get_rect()
        self.x = x
        self.y = y
        self.rect.x = x * TILESIZE
        self.rect.y = y * TILESIZE
class luckyspace(pg.sprite.Sprite):
    def __init__(self, game, x, y):
        self.groups = game.all_sprites, game.luckyspaces
        pg.sprite.Sprite.__init__(self, self.groups)
        self.game = game
        self.image = pg.Surface((TILESIZE, TILESIZE))
        self.image.set_colorkey(WHITE)
        self.image.fill(WHITE)
        self.rect = self.image.get_rect()
        self.x = x
        self.y = y
        self.rect.x = x * TILESIZE
        self.rect.y = y * TILESIZE

class bossspace(pg.sprite.Sprite):
    def __init__(self, game, x, y):
        self.groups = game.all_sprites, game.bossspaces
        pg.sprite.Sprite.__init__(self, self.groups)
        self.game = game
        self.image = pg.Surface((TILESIZE, TILESIZE))
        self.image.set_colorkey(BLACK)
        self.image.fill(BLACK)
        self.rect = self.image.get_rect()
        self.x = x
        self.y = y
        self.rect.x = x * TILESIZE
        self.rect.y = y * TILESIZE
